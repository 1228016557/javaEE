继承
	多个类具备共性内容 向上抽取到一个类中 一个类和多个类产生的关系叫做继承
	格式
		public class 子类 extedns 父类{

		}
	产生效果
		子类可以直接使用父类所有可继承的属性和行为(非私有)
		私有的成员变量可以通过get/set方法访问赋值和取值
	继承好处
		复用性
		可维护性
	弊端
		耦合性高 子类独立性弱
	注意事项
		1.java中类只支持单继承 不支持多继承
		2.支持多层继承
		3.所有的类都直接或者间接继承了Object类
		4.构造方法不能继承
	方法重写
		子类继承父类后,可以使用父类的非私有内容,但是如果觉得父类的方法
		不够强大,可以按照自身的逻辑来重新定义此方法 方法复写 方法覆盖
	注意事项
		1.可以使用@Override来验证是否是方法重新
		2.子类方法的访问权限要大于等于父类方法的访问权限
			public > 默认
	this
		this.成员变量
		this.成员方法()
		this()
	super
		super.成员变量
		super.成员方法()
		super(实际参数)  构造方法的第一行
包
        文件夹 用来区分相同文件
    包的声明
        package 包名  必须写在 最上面

    导包
        import 包名

        同一个包下的来不需要导包
        不同包下的类才需要导包
        java.lang包下的类不需要导包

    注意
        如果使用不同包下 相同类名的类 只有一个类可以导包
        另一个必须写全类名
访问权限修饰符
					public   protected  默认  private
 本类中				 1           1       1      1
 同包子类/无关类	 1		     1       1      0
 不同包子类    	     1			 1  	 0      0
 不同包无关类		 1			 0		 0 		0

 public  公共权限 任意包下都可以访问   类  成员变量  成员方法
 protected 受保护的  当前包 和 其他包的子类可以访问    成员变量  成员方法
 默认    包权限   当前包可以访问 类  成员变量  成员方法
 private 私有   本类可以访问 成员变量  成员方法

 final
        最终修饰符
        类  成员变量 局部变量 成员方法

      修饰类  不能被继承
      修饰变量  只能赋值一次不能二次赋值 是常量
      修饰方法 不能被重写

    注意事项
        1.final修饰引用类型地址值不能改变 但是成员变量的值可以改变
        2.final修饰成员变量 成员变量不能使用默认值 必须在创建对象之前赋值
                          直接赋值
                          构造方法中赋值
 static
        静态修饰符  修饰成员(成员变量 成员方法)
        特点
            static修饰的成员不再属于对象 而是属于类 被所有对象所共享
        静态的访问
            对象名.成员变量
            对象名.成员方法(参数)

            类名.成员变量
            类名.成员方法(参数)

        注意事项
            静态内容随着类的加载而加载,优先于对象出现,所以静态只能访问静态
            不能直接访问非静态 静态中不能使用this/super


